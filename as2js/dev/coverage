#!/bin/sh

set -e
start_date=`date`
MAJOR=`grep AS2JS_VERSION_MAJOR CMakeLists.txt | sed -e 's/^.*set(.*AS2JS_VERSION_MAJOR.*\([0-9]\+\).*$/\1/'`
MINOR=`grep AS2JS_VERSION_MINOR CMakeLists.txt | sed -e 's/^.*set(.*AS2JS_VERSION_MINOR.*\([0-9]\+\).*$/\1/'`
PATCH=`grep AS2JS_VERSION_PATCH CMakeLists.txt | sed -e 's/^.*set(.*AS2JS_VERSION_PATCH.*\([0-9]\+\).*$/\1/'`
echo "as2js coverage for version $MAJOR.$MINOR.$PATCH"
mkdir -p tmp/coverage
rm -rf tmp/coverage/*
cd tmp/coverage
mkdir BUILD
cd BUILD
# request coverage in this build
dist=`cd ../../../../; pwd`/BUILD/dist
modules=$dist/share/cmake-2.8/Modules
cmake -DCMAKE_INSTALL_PREFIX:PATH=$dist \
    -DCMAKE_MODULE_PATH:PATH=$modules \
    -DCMAKE_BUILD_TYPE=Debug \
    -Das2js_compiler_COVERAGE:BOOL=ON \
    -DCMAKE_BUILD_TYPE:BOOL=Debug \
    -DCONTROLLEDVARS_INCLUDE_DIR=$dist/include \
    ../../..
cd ..
echo
echo "***"
echo "*** compile"
echo "***"
VERBOSE=1 make -C BUILD
echo
echo "***"
echo "*** run"
echo "***"
# TODO add a test of the version here against the version in include/as2js/as2js.h.in
if test `BUILD/tests/test_as2js --version` != "$MAJOR.$MINOR.$PATCH"
then
    echo "the version of test_as2js (`BUILD/tests/test_as2js --version`) is not equal to the project version ($MAJOR.$MINOR.$PATCH)"
    exit 1;
fi
BUILD/tests/test_as2js
echo
echo "***"
echo "*** gcov/lcov"
echo "***"

# Choose one of the following gcov commands
mkdir -p gcov
cd gcov
gcov -o ../BUILD/src/CMakeFiles/as2js.dir/as2js.cpp.gcno ../../../src/as2js.cpp
cd ..


lcov --capture --directory BUILD --output-file coverage.info
mkdir -p html
genhtml --legend --demangle-cpp --no-branch-coverage --show-details coverage.info --output-directory html


echo "Process started  on $start_date"
echo "Process finished on `date`"

# vim: ts=4 sw=4 et
