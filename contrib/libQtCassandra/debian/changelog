libqtcassandra (0.6.4.1~xenial) xenial; urgency=high

  * Nightly build.

 -- Doug Barbieri <doug@dooglio.net>  Tue, 13 Sep 2016 17:34:09 -0700

libqtcassandra (0.6.4.0~xenial) xenial; urgency=high

  * SNAP-110: Bumped version to get my test system to upgrade properly.

 -- Alexis Wilke <alexis@m2osw.com>  Tue, 13 Sep 2016 11:59:22 -0700

libqtcassandra (0.6.3.0~xenial) xenial; urgency=high

  * SNAP-110: Force QUORUM everywhere. At this point without it we get many
    unexpected errors.

 -- Alexis Wilke <alexis@m2osw.com>  Sun, 11 Sep 2016 12:09:30 -0700

libqtcassandra (0.6.2.0~xenial) xenial; urgency=high

  * SNAP-110: while testing our new installation with a real Cassandra
    cluster, it started failing. It looks like that is 100% due to the
    fact that we ignored the main default consistency level of QUORUM
    and ended up using ONE instead.

 -- Alexis Wilke <alexis@m2osw.com>  Sat, 10 Sep 2016 02:00:55 -0700

libqtcassandra (0.6.1.0~xenial) xenial; urgency=high

  * Fixed Schema implementation using weak pointers to parents from children.

 -- Alexis Wilke <alexis@m2osw.com>  Tue, 23 Aug 2016 02:00:51 -0700

libqtcassandra (0.6.0~trusty) trusty; urgency=high

  * Switch the library to use CQL instead of thrift.
  * Removed counters since we are not using them at all.

 -- Doug Barbieri <doug@dooglio.net>  Sat, 16 Apr 2016 11:22:18 -0700

libqtcassandra (0.5.22) trusty; urgency=high

  * Applied a fix to the QCassandraLock so if a process trying to obtain
    a lock crashes (abort) or gets killed (KILL, computer loses power)
    then the entering::... key still gets deleted.
  * Bumped copyright notice to 2016.
  * Fixed the qcassandra-lock top comment which was from the lock test.
  * Finally took care of the debian/copyright file.
  * Changed the README.txt to a README.md file instead.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 14 Jan 2016 21:02:28 -0700

libqtcassandra (0.5.21) trusty; urgency=high

  [ Alexis Wilke ]
  * Added support for a regular expression to search rows.
  * Note: versions 0.5.8 to 0.5.20 were nightly builds changing the "wrong"
    version number.

 -- Alexis Wilke <alexis@m2osw.com>  Sat, 25 Apr 2015 22:49:26 -0700

libqtcassandra (0.5.7) saucy; urgency=low

  * Updated the headers to support the new controlled_vars enum.
  * Tweaked the include_directories() to support system and local headers.

 -- Alexis Wilke <alexis@m2osw.com>  Sat, 07 Jun 2014 13:54:12 -0700

libqtcassandra (0.5.6) saucy; urgency=high

  [Alexis Wilke]
  * Repaired warning-as-error regarding strict-overflow. Alexis added the
    special-edge case.

 -- R. Douglas Barbieri <doug@dooglio.net>  Tue, 01 Apr 2014 16:52:22 -0700

libqtcassandra (0.5.5) saucy; urgency=high

  [Alexis Wilke]
  * Added fix for clearTable() to work as expected.

 -- R. Douglas Barbieri <doug@dooglio.net>  Tue, 01 Apr 2014 11:58:44 -0700

libqtcassandra (0.5.4) saucy; urgency=high

  [Alexis Wilke]
  * Added documentation about the fact that the QMap is always started from
    smallest to largest even if you set the reverse flag on.

 -- R. Douglas Barbieri <doug@dooglio.net>  Fri, 28 Mar 2014 00:26:04 -0700

libqtcassandra (0.5.3) saucy; urgency=high

  [Alexis Wilke]
  * Updated the C++ warnings: reduced the strict-overlow to 4 instead of 5,
    tested with -Wconversion and fixed many errors.
  * "Fixed" comparison between floating point numbers (== and !=).
  * Removed some debug code.

 -- R. Douglas Barbieri <doug@dooglio.net>  Tue, 04 Mar 2014 14:23:08 -0800

libqtcassandra (0.5.2) saucy; urgency=high

  * Put the limit size of a buffer inside the throw raised when the limit is
    reached.

 -- R. Douglas Barbieri <doug@dooglio.net>  Mon, 17 Feb 2014 17:38:35 -0800

libqtcassandra (0.5.1) saucy; urgency=high

  * Bump to upload new version to PPA.

 -- R. Douglas Barbieri <doug@dooglio.net>  Thu, 06 Feb 2014 14:33:17 -0800

libqtcassandra (0.5.0-2) quantal; urgency=low

  * Changed all shared pointer with std::share_ptr<> so we can use weak
    pointers properly.

 -- R. Douglas Barbieri <doug@dooglio.net>  Sun, 26 Jan 2014 14:29:29 -0800

libqtcassandra (0.5.0-1) quantal; urgency=high

  * Fixed broken package because of the info file, which was not needed.

 -- R. Douglas Barbieri <doug@dooglio.net>  Mon, 09 Dec 2013 23:44:10 -0800

libqtcassandra (0.5.0) quantal; urgency=high

  [ Alexis Wilke ]
  * 0.5.0 moved to version 2.0.1 of Cassandra
  * Replaced thrift with version 0.9.0.
  * Replaced the thrift/Cassandra interface with Cassandra 2.0.1.
  * Fixed bug with the QCassandraRow::exists() function (finally!)
  * Made sure the QCassandraValue copy operator was working right.
  * Created this ChangeLog file instead of just a README.txt.
  * Started creating a wpkg directory with the intend to package everything.
  [ R. Douglas Barbieri ]
  * Initial release of packaging.

 -- R. Douglas Barbieri <doug@dooglio.net>  Mon, 25 Nov 2013 17:17:29 -0800

libqtcassandra (0.4.7) unstable; urgency=medium

  * added support for a Cassandra-only Lock mechanism
  * Added many missing updates to this README.txt file.
  * Fixed some documentation.
  * Added support for specifying the consistency on a value
    read by setting the consistency in the cell.
  * Added a synchronization function so we can wait and have all the
    nodes running with the same schema version.
  * Fixed the QCassandra::Snitch() so it returns the snitch, not the
    protocol version.
  * Added a test to verify that locks work when processes run on any
    number of clients.
  * Updated the tests to properly work in a cluster environment.
  * Added a unit test for the QCassandraValue class which checks
    a large number of cases, this allowed me to apply fixes.
  * The <, <=, >, >= QCassandraValue operators were invalid.
  * Added Bool support in the QCassandraValue object.
  * Added an index to the QCassandraValue data; and a size
    for strings and binaries (although a UTF-8 size...)
  * Moved the read of values to global functions so they are
    accessible from other functions without having to use
    QCassandraValue variables
  * Fixed the findContext() so it loads the Cassandra contexts first
    if not yet loaded.
  * Fixed the disconnect() function so it clears all the variables
    and the same Cassandra object can safely be reused.
  * Fixed the QCassandraPrivate::getColumnSlice() and
    QCassandraPrivate::getRowSlices() functions which would not
    first transform the column key in a QByteArray and thus binary
    keys with null characters would invariably fail.
  * Fixed the QCassandraRow::dropCell() as it would emit a read of
    the cell before actually dropping it. The read would retrive the
    consistency value and/or the timestamp. These values are retrieved
    from memory only now, if defined.
  * Fixed the CMakeLists.txt so the thrift library is linked against
    the libQtCassandra library itself; that way it is not required in
    the binaries that link against the libQtCassandra library.
  * Removed all references to the boost_system library.
  * Reviewed the SSL connection capability. It is still not considered
    to be working but the password can now be specified from your
    application.
  * Included 2013 in copyright notices.

 -- Alexis Wilke <alexis@m2osw.com>  Sun, 27 Jan 2013 19:28:52 -0800

libqtcassandra (0.4.6) unstable; urgency=medium

  * Added support for UUID and char */wchar_t *.
  * Added direct support for QUuid as row and column keys.
  * Added direct support for char * and wchar_t * so we do not
    have to first cast strings to QString everywhere.
  * Fixed bug testing row key size to limit of 64535 instead
    of 65535.
  * Added a test as row and column keys cannot be empty. It will
    now throw an error immediately if so.
  * Updated some documentation accordingly and with enhancements.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 06 Dec 2012 19:28:52 -0800

libqtcassandra (0.4.5) unstable; urgency=medium

  * Added a first_char and last_char variables (QChar) in column predicate
    which can be used to define "[nearly] All column names".
  * Fixed the names of two functions: setFinishColumnName() and
    setFinishColumnKey() are now setEndColumnName() and setEndColumnKey()
    respectively (as documented and so it matches the getters.)
  * Added support for indexes defined with columns. The column predicate
    now has a setIndex() function and that allows you to call readCells()
    repititively until all the columns matching the predicate were returned
    (very similar to reading a large set of rows.)
  * Fixed a few things in the documentation.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 22 Nov 2012 19:28:52 -0800

libqtcassandra (0.4.4) unstable; urgency=medium

  * Added support for composite columns. It was functional before but
    with knowledge on how to build the column key which is actually
    quite complicated (okay, not that hard, but libQtCassandra is here
    to hide that sort of thing!) Use the compositeCell() function of
    your QCassandraRow objects.

 -- Alexis Wilke <alexis@m2osw.com>  Fri, 31 Aug 2012 19:28:52 -0800

libqtcassandra (0.4.3) unstable; urgency=medium

  * Added support for counters
  * Fixed several usage of keys so 0 bytes works as expected
    (in getValue() and insertValue().)
  * Small fixes to documentation.

 -- Alexis Wilke <alexis@m2osw.com>  Thu, 30 Aug 2012 19:28:52 -0800

libqtcassandra (0.4.2) unstable; urgency=medium

  * Primarily fixes the problem with readRows() which could not
    be used to read more than count rows because the following
    call would return an invalid set of entries.
  * Fixed readRows()
  * Fixed replicateOnWrite()
  * Fixed CMakeLists.txt in regard to thrift
  * Fixed prepareContextDefinition()
  * Added support for 1.0 and 1.1
  * Added the million_rows stress test
  * Upgraded to thrift 0.8.0

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 22 Aug 2012 19:28:52 -0800

libqtcassandra (0.4.1) unstable; urgency=medium

  * Fixed the size of the buffer used to save 64 bit integers.
  * Fixed the size of integers used to handle floating points.
  * Fixed the double being read as 8 bytes and somehow converted to a
    float instead of a double.
  * Fixed the test of the string set in a value to limit the UTF-8 version
    of the string to 64Mb (instead of the number of UCS-2 characters held
    by a QString.)
  * Enhanced documentation about the findRow() and findCell() which do not
    look for a row or cell in the Cassandra system, it only checks in memory!
  * Better support older versions of g++ (4.1 cannot properly cast the
    controlled variables for enumerations) -- thank you to John Griswold
    for reporting the problem.
  * Added some missing documentation.

 -- Alexis Wilke <alexis@m2osw.com>  Wed, 16 May 2012 19:28:52 -0800

libqtcassandra (0.4.0) unstable; urgency=medium

  * Enhanced the cmake scripts to make it even easier (find/use Qt, Thrift)
    and thus I jumped to version 0.4.0 because this is a pretty major change
    from 0.3.x
  * Removed the Qt sub-folder names from \#include.
  * Made the getValue() function return false so we can know when it fails
    and react accordingly.
  * Fixed the use of the slice predicate and ignore the strings null
    terminator as they ought to be (i.e. a key can include a nul character.)
  * Added some try/catch to avoid a certain number of fairly legal
    exceptions (i.e. missing value or column.)
  * Removed all unwanted files from source package using a CPACK option.
  * Strip folder name from documentation to make it smaller.
  * Updated all copyrights to include 2012.

 -- Alexis Wilke <alexis@m2osw.com>  Sat, 12 May 2012 19:28:52 -0800

libqtcassandra (0.3.2) unstable; urgency=medium

  * Fixed the creation of a row predicate as it wasn't defining a column
    predicate which is necessary when we call readRows() with the default
    parameters on a table.

 -- Alexis Wilke <alexis@m2osw.com>  Fri, 07 Jan 2012 19:28:52 -0800

libqtcassandra (0.3.1) unstable; urgency=medium

  * Ameliorated cmake scripts
  * Added support for installation targets and generation of binary packages.

 -- Alexis Wilke <alexis@m2osw.com>  Sat, 26 Nov 2011 19:28:52 -0800

libqtcassandra (0.3.0) unstable; urgency=medium

  * Added a dropContext() in the QCassandra object.
  * Added proper unparenting of the context and table classes.
  * Started to make use of the Controlled Variables (requires 1.3.0 or better.)

 -- Alexis Wilke <alexis@m2osw.com>  Fri, 11 Nov 2011 19:28:52 -0800
