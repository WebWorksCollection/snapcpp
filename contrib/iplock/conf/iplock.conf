# Sample configurationfile
#
# This file works for us, but your firewall may be different.
# Please check every command line flag to ensure that it is
# compatible with your environment. Especially the network
# interface (eth0) and the name of the table where you want
# to add and remove the locks.
#
# IP Lock Configuration file


# chain=<name of chain>
#
# Name the chain to be updated when blocking or unblocking an IPv4 address.
#
# We use `unwanted` by default, but you may want to use a totally different
# name for the anti-hacker chain on your systems.
#
# Default: unwanted
chain=unwanted


# interface=<name of interface>
#
# The name of the interface where the chain will block IPs.
#
# TODO: support any number of interfaces with varying names.
#
# Default: eth0
interface=eth0


# chain6=<name of chain for ip v6 addresses>
#
# Name the chaing to be updated when blocking or unblocking an IPv6 address.
#
# We use the same name as for IPv4 by default (i.e the `chain` name), but
# if you have a chain with a different name in your IPv6 filter, enter
# that name here.
#
# Default: <same as `chain`>
#chain6=unwanted

# check=<full path>
#
# This is the command to use to add firewall rules into
# the firewall itself one rule at a time.
#
check=/sbin/iptables -w -t filter

#check6=...TODO

# block=<full path>
#
# This is the command to use to add firewall rules into
# the firewall itself one rule at a time.
#
block=/sbin/iptables -w -t filter

#block6=...TODO

# unblock=<full path>
#
# This command allows one rule to be removed from the firewall.
#
unblock=/sbin/iptables -w -t filter

#unblock6=... TODO

# batch=<full path>
#
# This command is used to bulk add rules into the system filewall.
# It is assumed that it purges all existing rules first, then installs the
# new ruleset. This is provided for batch operations, as per SNAP-515,
# since a rule set of 10,000 IP addresses takes a very long time when
# the firewall command is run for one rule at a time.
#
batch=/sbin/iptables-restore --noflush

#batch6=... TODO


# vim: wrap
