#!/bin/bash
#
# File:
#      CMakeLists.txt
#
# Description:
#      Definitions to create the build environment with cmake
#
# Documentation:
#      See the CMake documentation.
#
# License:
#      csspp -- a CSS Preprocessor
#      Copyright (c) 2015 Made to Order Software Corp.
#
#      http://snapwebsites.org/
#      contact@m2osw.com
#
#      This program is free software; you can redistribute it and/or modify
#      it under the terms of the GNU General Public License as published by
#      the Free Software Foundation; either version 2 of the License, or
#      (at your option) any later version.
#
#      This program is distributed in the hope that it will be useful,
#      but WITHOUT ANY WARRANTY; without even the implied warranty of
#      MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#      GNU General Public License for more details.
#
#      You should have received a copy of the GNU General Public License
#      along with this program; if not, write to the Free Software
#      Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301 USA
#

set -e

if test "$1" = "--help" -o "$1" = "-h"
then
    echo "Usage: $0 [--opt] [test-name]"
    echo "where --opt is one of:"
    echo "   --all          run all tests"
    echo "   --full         run all tests and publish to the world"
    echo
    echo "To run specific tests, use one of the tags defined in the test suite."
    echo "   '[color]'"
    echo "   '[compiler]'"
    echo "   '[csspp]'"
    echo "   '[error]'"
    echo "   '[lexer]'"
    echo "   '[node]'"
    echo "   '[nth-child]'"
    echo "   '[parser]'"
    echo "   '[position]'"
    echo "   '[unicode-range]'"
    echo "You may use the list option to see the available tests and tags:"
    echo "   csspp_tests --list-tests"
    exit 1;
fi

if test "$1" = "--full"
then
    FULL=true
    shift
else
    FULL=false
fi

start_date=`date`
SOURCE_PATH=`pwd`
. dev/version
echo "***"
echo "*** csspp coverage for version $FULL_VERSION (`date`)"
echo "***"
mkdir -p tmp/build/csspp_coverage
rm -rf tmp/build/csspp_coverage/*
cd tmp/build
BUILD_PATH=`pwd`
cd csspp_coverage
ln -s ../../../../snapCMakeModules .
# request coverage in this build
export ADVGETOPT_INCLUDE_DIR=$SOURCE_PATH/../BUILD/dist/include
export ADVGETOPT_LIBRARY=$SOURCE_PATH/../BUILD/dist/lib
cmake -DCMAKE_INSTALL_PREFIX:PATH="$SOURCE_PATH/$BUILD_PATH/dist" \
      -DCMAKE_BUILD_TYPE=Debug \
      -DCMAKE_MODULE_PATH=$SOURCE_PATH/../snapCMakeModules/Modules \
      -Dcsspp_project_COVERAGE:BOOL=ON \
          ../../..
echo
echo "***"
echo "*** compile (`date`)"
echo "***"
VERBOSE=1 make
echo
echo "***"
echo "*** run (`date`)"
echo "***"
if test `tests/csspp_tests --version` != "$FULL_VERSION"
then
    echo "the version of test_csspp (`BUILD/tests/test_csspp --version`) is not equal to the project version ($FULL_VERSION)"
    exit 1;
fi
if $FULL
then
    # We test the pipe status on exit to detect whether the test failed
    echo "Start running the tests on `date`" >test_log.txt
    echo >>test_log.txt
    # --success generates way too much output for HTML
    tests/csspp_tests --scripts $SOURCE_PATH/scripts --version-script scripts --durations yes 2>&1 | tee -a test_log.txt; test ${PIPESTATUS[0]} -eq 0
    echo >>test_log.txt
    echo "Finished running the tests on `date`" >>test_log.txt
else
    # "brief" test while working on a specific test
    if test "$1" == "--all" -o -z "$1"
    then
        # Do it all, but not published
        tests/csspp_tests --scripts $SOURCE_PATH/scripts --version-script scripts
    else
        tests/csspp_tests --scripts $SOURCE_PATH/scripts --version-script scripts "$1"
    fi
    # just in case, remove the log file if there is one
    rm -f test_log.txt
fi
cd ..

echo
echo "***"
echo "*** gcov/lcov (`date`)"
echo "***"


# The following lcov options can be used under Ubuntu 14.04+
# Use --no-external and --base-directory $SOURCE_PATH
# to avoid /usr/include and other unwanted files
# (only available in lcov version 1.10+)
lcov --capture --no-external --directory csspp_coverage --base-directory $SOURCE_PATH --output-file coverage.info
mkdir -p csspp_coverage_html
genhtml --legend --demangle-cpp --no-branch-coverage --show-details coverage.info --output-directory csspp_coverage_html


end_date=`date`

# Statistics
echo "<html><head><title>csspp $FULL_VERSION statistics</title></head><body>" >csspp_coverage_html/statistics.html
echo "<h3>Statistics of the csspp $FULL_VERSION code</h3><pre>" >>csspp_coverage_html/statistics.html
cloc $SOURCE_PATH/include/ $SOURCE_PATH/lib/ $SOURCE_PATH/src/ >>csspp_coverage_html/statistics.html
echo "</pre><h3>Statistics of the csspp $FULL_VERSION tests</h3><pre>" >>csspp_coverage_html/statistics.html
cloc $SOURCE_PATH/tests/ >>csspp_coverage_html/statistics.html
echo "</pre></body></html>" >>csspp_coverage_html/statistics.html

# Test output (Logs)
echo "<html><head><title>csspp $FULL_VERSION test logs</title></head><body><h3>Logs for the csspp $FULL_VERSION tests</h3><p>Tests started on $start_date and finished on $end_date</p><pre>" >csspp_coverage_html/test_log.html
if test -f csspp_coverage/test_log.txt
then
    # If test_log.txt does not exist, the user got the logs in the
    # console already
    cat csspp_coverage/test_log.txt >>csspp_coverage_html/test_log.html
fi
echo "</pre></body></html>" >>csspp_coverage_html/test_log.html


if test -f csspp_coverage/test_log.txt
then
    echo "***"
    echo "*** publication to ... ($end_date)"
    echo "***"

    # For publication, if that directory does not exist, you probably don't
    # have a website to display this data
    if test -d /usr/clients/www/alexis.m2osw.com/public_html/csspp
    then
        mkdir -p /usr/clients/www/alexis.m2osw.com/public_html/csspp/documentation
        cp -r csspp_coverage/doc/csspp-doc-*/* /usr/clients/www/alexis.m2osw.com/public_html/csspp/documentation/.
        cp $SOURCE_PATH/dev/index.php /usr/clients/www/alexis.m2osw.com/public_html/csspp/.
        mkdir -p /usr/clients/www/alexis.m2osw.com/public_html/csspp/csspp-$FULL_VERSION
        cp -r csspp_coverage_html/* /usr/clients/www/alexis.m2osw.com/public_html/csspp/csspp-$FULL_VERSION/.
        cp csspp_coverage_html/statistics.html /usr/clients/www/alexis.m2osw.com/public_html/csspp/csspp-$FULL_VERSION/.
    fi
fi

echo "Process started  on $start_date"
echo "Process finished on $end_date"

# Local Variables:
# indent-tabs-mode: nil
# tab-width: 4
# End:

# vim: ts=4 sw=4 et
