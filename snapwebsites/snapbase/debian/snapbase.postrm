#!/bin/sh -e

# Source debconf library.
. /usr/share/debconf/confmodule

if [ "$1" = "purge" ]
then
    # delete various data directories we use in Snap!
    #
    rm -rf /var/lib/snapwebsites
    rm -rf /var/log/snapwebsites
    rm -rf /var/cache/snapwebsites

    USER=snapwebsites
    GROUP=snapwebsites

    # delete snapwebsites daemon user, if it exists
    #
    if getent passwd ${USER} > /dev/null
    then
        if pgrep -u ${USER} > /dev/null
        then
            echo "Cannot delete user '${USER}' because there are processes running owned by this user!"
        else
            echo "Deleting ${USER} user"
            deluser --quiet ${USER} > /dev/null || true
        fi
    fi

    # delete snapwebsites daemon group, if it exists
    #
    if getent group ${GROUP} > /dev/null
    then
        if pgrep -G ${GROUP} > /dev/null
        then
            echo "Cannot delete group '${GROUP}' because there are processes running owned by this group!"
        else
            echo "Deleting ${GROUP} group"
            delgroup --quiet ${GROUP} > /dev/null || true
        fi
    fi

    # delete the settings directory, but leave it if non-empty
    #
    if test -d /etc/snapwebsites
    then
        rmdir --ignore-fail-on-non-empty /etc/snapwebsites
    fi

    # handle apache2 appropriately
    #
    # TBD: look into moving this code in the "snapapacheinit remove" section?
    #      the problem is we do not want to disable the security if snapbase
    #      remains in place... also by now that script was deleted by the
    #      system (i.e. we would actually have to call it from `prerm`)
    #
    if hash a2enconf 2>/dev/null
    then
        a2disconf -q snap-apache2-security
        a2enconf -q security
        a2disconf snap-acceptfilter
        a2disconf snap-httpoxy

        # make sure to force a reload or that's going to be useless
        #
        systemctl restart apache2
    else
        # here we may still have the soft-link since we did not have
        # a chance to call a2disconf on it... so we remove it by
        # hand and then remove all the directories which should now
        # be empty
        #
        rm -f /etc/apache2/conf-enabled/snap-apache2-security.conf
        rm -f /etc/apache2/conf-enabled/snap-acceptfilter.conf
        rm -f /etc/apache2/conf-enabled/snap-httpoxy.conf
        for dir in \
            /etc/apache2/conf-empty \
            /etc/apache2/conf-available \
            /etc/apache2
        do
            if [ -d "${dir}" ]
            then
                # If the dir is not found, this would cause an error
                rmdir --ignore-fail-on-non-empty ${dir}
            fi
        done
    fi
fi

#DEBHELPER#

# vim: ts=4 sw=4 et nocindent
