<?xml version="1.0"?>
<!--
  see /usr/share/snapwebsites/xsd/bundles.xsd for details
  to verify your changes (change the == with two dashes):
    xmllint ==noout ==schema /usr/share/snapwebsites/xsd/bundles.xsd /etc/snapwebsites/services.d/bundle-mailserver.xml
-->
<bundle>
  <name>mailserver</name>
  <description>
    <p>Install postfix and snapbounce to make this computer a mail server.</p>

    <p>The post installation script will then update the necessary setup
    files in order to get the duo working.</p>
  </description>
  <fields>
    <field name="domain" type="input">
      <label>Domain (myhostname)</label>
      <description>
        The name of the domain used for this mail server.
        For example: mail.snapwebsites.net -- your DNS should define that
        name as an MX record.
      </description>
    </field>
    <field name="organization" type="input">
      <label>Organization</label>
      <description>
        The name of your organization. It will be shown to people sending
        emails manually. It may be used by various systems to help contacting
        your organization. You may include a website URL although it is not
        that costumary to do so.
      </description>
    </field>
  </fields>
  <packages>snapbounce,postfix,postfix-policyd-spf-python,opendkim,opendkim-tools,opendmarc,postsrsd</packages>
  <postinst>
    ################################################################################
    # Setup the transport.map file
    #
    # I'm not too sure why we would want these two lines:
    #
    #localhost bounces:
    #${BUNDLE_INSTALLATION_DOMAIN} bounces:
    #
    # For now, I removed them from the file altogether.
    #
    cat &gt;/etc/postfix/transport.maps &lt;EOF
# See SNAP-67
# After changes, run postmap:
#   postmap /etc/postfix/transport.maps
#
bounces@${BUNDLE_INSTALLATION_DOMAIN} snapbounce:
EOF
    postmap /etc/postfix/transport.maps

    echo "mail.${BUNDLE_INSTALLATION_DOMAIN}" &gt; /etc/mailname 

    # setup the domain and a few other things
    # the few entries at the bottom connects snapbounce to postfix
    #
    MAILSERVER_SED=/tmp/bundle-mailserver.sed
    echo "s/^myhostname = .*/myhostname = mail.${BUNDLE_INSTALLATION_DOMAIN}/"                       &gt;     ${MAILSERVER_SED}
    echo "s/^smtpd_banner = \\(.*\\) (.*)/smtpd_banner = \\1 (${BUNDLE_INSTALLATION_ORGANIZATION})/" &gt;&gt; ${MAILSERVER_SED}
    sed -i.bak -f ${MAILSERVER_SED} /etc/postfix/main.cf

    ################################################################################
    postconf -e "notify_classes               = bounce"
    postconf -e "bounce_notice_recipient      = bounces@${BUNDLE_INSTALLATION_DOMAIN}"
    postconf -e "transport_maps               = hash:/etc/postfix/transport.maps"

    ################################################################################
    # Add postsrsd support.
    #
    postconf -e "sender_canonical_maps       = tcp:127.0.0.1:10001"
    postconf -e "sender_canonical_classes    = envelope_sender"
    postconf -e "recipient_canonical_maps    = tcp:127.0.0.1:10002"
    postconf -e "recipient_canonical_classes = envelope_recipient"
    #
    sed -i.bak \
      -e "s/^SRS_DOMAIN=[^$]*$/SRS_DOMAIN=${BUNDLE_INSTALLATION_DOMAIN}/" \
      /etc/default/postsrsd

    ################################################################################
    # we then need to add a snapbounce entry to the master.cf file
    #
    postconf -M snapbounce/unix="snapbounce unix -       n       n       -       -       pipe"
    postconf -P "snapbounce/unix/flags=FRq"
    postconf -P "snapbounce/unix/user=snapwebsites"
    postconf -P "snapbounce/unix/argv=/usr/bin/snapbounce --sender \${sender} --recipient \${recipient}"

    ################################################################################
    # make sure submission/inet is turned on as well
    #
    # TODO: create TLS keys automatically...don't use the snakeoil stuff.
    # TODO: add imap-ssl support.
    #
    postconf -M submission/inet="submission inet n       -       y       -       -       smtpd"
    postconf -P "submission/inet/smtpd_enforce_tls=yes"
    postconf -P "submission/inet/smtpd_sasl_auth_enable=yes"
    postconf -P "submission/inet/syslog_name=postfix/submission"

    ################################################################################
    # (re)start services with the correct parameters
    #
    # also the tripwire bundle may disable postfix so here we make sure
    # it is enabled
    #
    if systemctl -q is-active postfix
    then
      systemctl reload postfix
    else
      systemctl enable postfix
      systemctl start postfix
    fi
  </postinst>
  <postrm>
    rm -rf /etc/opendkim /etc/opendmarc
  </postrm>
</bundle>
<!--
  vim: ts=2 sw=2 et
-->
