#!/bin/sh -e

#DEBHELPER#

# Source debconf library.
. /usr/share/debconf/confmodule


if [ "$1" = "configure" ]
then
    PACKAGENAME=snapmanagercgi

    # Create a default user editable snapmanager.conf file if it does not
    # exist yet
    #
    SNAPMANAGER_USER_CONFIGURATION_FILENAME=/etc/snapwebsites/snapwebsites.d/snapmanager.conf
    if test ! -f $SNAPMANAGER_USER_CONFIGURATION_FILENAME
    then
        # We do not have an IP address to add to the clients variable
        # but the user should edit that specific variable
        #
        echo "# Various changes to get snapmanager.cgi and snapmanagerdaemon to work" >$SNAPMANAGER_USER_CONFIGURATION_FILENAME
        echo "# for more info and details about the variables defined here, check" >>$SNAPMANAGER_USER_CONFIGURATION_FILENAME
        echo "# the file of the same name one directory up" >>$SNAPMANAGER_USER_CONFIGURATION_FILENAME
        echo "#" >>$SNAPMANAGER_USER_CONFIGURATION_FILENAME
        echo "#clients=" >>$SNAPMANAGER_USER_CONFIGURATION_FILENAME
    fi

    # Create the snapmanagercgi.log file because the www-data user may have
    # difficulties with it otherwise
    #
    SNAPLOGDIR=/var/log/snapwebsites
    SNAPMANAGERCGI_LOG=${SNAPLOGDIR}/${PACKAGENAME}.log
    touch ${SNAPMANAGERCGI_LOG}
    chown www-data:www-data ${SNAPMANAGERCGI_LOG}
    chmod 640 ${SNAPMANAGERCGI_LOG}
    
    SNAPSECURELOGDIR=/var/log/snapwebsites/secure
    SNAPSECUREMANAGERCGI_LOG=${SNAPSECURELOGDIR}/${PACKAGENAME}.log
    touch ${SNAPSECUREMANAGERCGI_LOG}
    chown www-data:www-data ${SNAPSECUREMANAGERCGI_LOG}
    chmod 640 ${SNAPSECUREMANAGERCGI_LOG}

    # create the directory to be used to save the status files
    #
    mkdir -p /var/lib/snapwebsites/cluster-status
    chmod 775 /var/lib/snapwebsites/cluster-status
    chown snapwebsites:www-data /var/lib/snapwebsites/cluster-status

    # create the snapmanager sub-directory to put out ServerName/Webmaster
    # parameter that the user is likely to change
    #
    mkdir -p /usr/share/snapwebsites/apache2/snapmanager
    cp -n /usr/share/snapwebsites/apache2/user-snap-apache2-snapmanager-common.conf /etc/apache2/snap-conf/snapmanager/snapmanager-apache2-common.conf
    cp -n /usr/share/snapwebsites/apache2/user-snap-apache2-snapmanager-443.conf /etc/apache2/snap-conf/snapmanager/snapmanager-apache2-443.conf

    # The snapmanager.cgi also requires the cgi and rewrite modules
    #
    a2enmod -qm cgi
    a2enmod -qm rewrite

    # enable the snapmanager-apache2.conf site and make sure to remove the
    # default if it is still enabled
    #
    a2dissite -qm 000-default
    a2ensite -qm snapmanager-apache2

    # Now run various common apache initializations
    # (logrotate, enable/disable configuration/modules/sites)
    # The external script will restart apache2 as well
    #
    /usr/lib/snapwebsites/scripts/snapapacheinit install
fi


# vim: ts=4 sw=4 et nocindent
