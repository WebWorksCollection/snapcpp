# Snap! Manager configuration file
# This file is used by snapmanager.cgi and snapmanagerdaemon
#
# The file is a basic list of variable name = value
# Comments start with a # character, must be the first character after spaces
# Empty lines are ignored


# clients=<ip address>,...
#
# A list of one or more IP addresses, separated by commas. Only
# computers with those IP addresses can connect to snapmanager.cgi.
#
# This parameter is not editable by snapmanager.cgi for (obvious?)
# reasons.
#
# This parameter is ignored by snapmanagerdaemon which is anyway
# only accessible locally through snapcommunicator.
#
# Default: <none>
clients=


# stylesheet=<path to snapmanager.cgi stylesheet>
#
# In order to output the final page, snapmanager.cgi currently makes
# use of an XML stylesheet (a .xsl file). This parameter defines the
# path and filename to use to load that stylesheet.
#
# Default: /etc/snapwebsites/snapmanagercgi-parser.xsl
stylesheet=/etc/snapwebsites/snapmanagercgi-parser.xsl


# snapcommunicator=<ip address>:<port>
#
# Define the snapcommunicator IP address and port. This is required
# in the snapmanager.cgi since it does not get started by snapinit.
#
# The snapmanagerdaemon ignores this parameter which instead makes
# use of the --connect command line parameter.
#
# Default: snapcommunicator=127.0.0.1:4040
#snapcommunicator=127.0.0.1:4040


# log_server=<path to log properties>
#
# If you are using the log server, then this can be used to get the logs
# sent to that server. If this variable is defined, then it gets used
# by both, snapmanager.cgi and snapmanagerdaemon.
#
# If this variable is not defined (default), then the log_config_...
# parameters are used instead.
#
# Default: <not defined>
#log_server=/etc/snapwebsites/logserver.properties


# log_config_cgi=<path to log properties>
#
# This variable defines the properties that log4cplus library will read
# to handle logging of the snapmanager.cgi tool.
#
# This parameter is ignored by the snapmanagerdaemon binary.
#
# Default: /etc/snapwebsites/snapmanagercgi.properties
log_config_cgi=/etc/snapwebsites/snapmanagercgi.properties


# log_config_daemon=<path to log properties>
#
# This variable defines the properties that log4cplus library will read
# to handle logging of the snapmanagerdaemon tool.
#
# This parameter is ignored by the snapmanager.cgi binary.
#
# Default: /etc/snapwebsites/snapmanagerdaemon.properties
log_config_daemon=/etc/snapwebsites/snapmanagerdaemon.properties


# data_path=<path to persistent data directory>
#
# Path to where the CGI can load and the daemon can save status data
# about each computer in the cluster.
#
# By default this directory is expected to be persistent between reboots.
# You can use /run/snapwebsites/cluster-status instead if you have
# servers with enough memory to support all the cluster data. Note
# that if you do not use a persistent directory, then snapmanager.cgi
# may need some time to get all the data updated on each reboot.
#
# The default directory gets created by the snapmanagercgi.portinst
# script.
#
# Default: /var/lib/snapwebsites/cluster-status
data_path=/var/lib/snapwebsites/cluster-status


# bundle_uri=<uri>
#
# The URI to a bundle repository. This is used to get a list of bundles
# that defines what to installed to get such and such functionality
# on a Snap! Websites server.
#
# The URI must point to the location including the directory.xml file
# which itself defines a set of URIs to actual bundle description files.
#
# Default: http://bundles.snapwebsites.info/
bundle_uri=http://bundles.snapwebsites.info/


# snapmanager_frontend=<server-name>,<server-name>,...
#
# A list of server names running the snapmanager.cgi, i.e. considered to
# be front end snap server capable of handling client requests toward
# snapmanager.cgi.
#
# There may be just one such computer. You may even turn on that computer
# only when you need it. However, if you leave it empty (the default
# because we cannot infer your IP address scheme) then messages from
# this snapmanagerdaemon will be broadcasted to all others in your
# Snap! cluster instead of just the front end ones.
#
# This parameter is ignored by snapmanager.cgi.
#
# Default: <none>
snapmanager_frontend=


# plugins_path=<path to plugins>
#
# The snapmanager.cgi and snapmanagerdaemon make use of a set of common
# plugins to do their work. The daemon uses them to generate statuses
# and CGI to display the status on the screen. Further, the CGI uses
# the plugins to display widgets to allow for editing of values that
# the snapmanager offers for editing.
#
# The variable is a list of colon separated paths to compatible .so files.
#
# Note: there is no variable that you could use to define the list of
#       plugins to load because snapmanager.cgi and snapmanagerdaemon
#       are expected to have access to as many plugins as possible at
#       all time.
#
# Default: plugins_path=/usr/lib/snapwebsites/manager_plugins
#plugins_path=/usr/lib/snapwebsites/manager_plugins


# vim: wrap
