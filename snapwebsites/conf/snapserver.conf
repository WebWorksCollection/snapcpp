# Sample of Snap! Server configuration file
# This file is actually used while working on development
#
# The file is a basic list of variable name = value
# Comments start with a # character, must be the first character after spaces
# Empty lines are ignored

# Name of this server, each server MUST have a different name to make sure
# that each can generate unique identifiers
server_name=my_server_name

# Log configuration file
log_config=/etc/snapwebsites/log.conf

# IP and port to listen on
listen=127.0.0.1:4004

# Host & Port to connect to Cassandra
cassandra_host=127.0.0.1
cassandra_port=9160

# Use one of:
#   simple -- use a simple strategy for the context (change before creation!)
#             select this ONLY if you can be sure you will never use more
#             than one data center
#   local -- spread the data between various racks, but the same data center
#   network -- use a rack and data center aware strategy, slower, but much
#              more versatile
cassandra_strategy=simple
# The replication factor defines how many copies of your data is kept total
# In most cases you want a minimum of 3. If you have 2 or even just 1 node
# (i.e. in a development environment) then change this value (change before
# creation of the snap_websites context); this parameter is used for all
# strategies, although in case of a network setup, it will make that many
# copies total on all data centers
cassandra_replication=1
# The replication factor needs to be defined on a per data center basis
# when you use the 'local' or 'network' strategies. In that case we need
# the list of data center names (DC1,DC2...) This parameter is a comma
# separated list of data centers; WARNING: if you put an invalid name here,
# then Cassandra will give you "UnavailableException" errors!
cassandra_data_centers=DC1

# Wait forever for Cassandra to come up, pause for 10 seconds between
# each attempt
wait_interval=10
wait_max_tries=-1

# Query string used as the path
qs_path=q

# Query string used as the action
qs_action=a

# Language variable name
qs_language=lang

# Whether the "current" or "current working" branch is accessed
# if this parameter is set to anything, use the "current working" branch
qs_working_branch=working_branch

# Branch, Revision, and "Branch.Revision" variable name
qs_branch=branch
qs_revision=revision
qs_rev=rev

# Overwriting Layout and Theme
qs_layout::layout=layout
qs_layout::theme=theme

# Folder with the Plug-ins
# The default is /usr/lib/snapwebsites/plugins
plugins_path=/usr/lib/snapwebsites/plugins

# The list of plugins to load by default until a site defines its own list
# (names are comma separated, no spaces)
# WARNING: At this time the order in which plugins are listed here HAS
#          an impack so it is best to keep them in that order.
default_plugins=attachment,sitemapxml,robotstxt,filter,path,links,content,layout,editor,char_chart,permissions,favicon,javascript,taxonomy,search,users,form,sessions,messages,sendmail,shorturl,info,antivirus,list,mimetype,images,versions,locale,locale_widgets,locale_settings

# Path to where the server can save data (counters, local locks, etc.)
data_path=/var/lib/snapwebsites

# Path to the log directory where any plugin/tool can log information
# in regard to snapwebsites (note that some logs use log4cplus which
# does not take this path in account)
log_path=/var/log/snapwebsites

# List of services that snapinit will start on reboot
services=server,sendmail,pagelist,images

# IP and port of the computer that runs the sendmail backend server
# To stop the sendmail backend: snapsignal -a sendmail STOP
# To ping the sendmail backend: snapsignal -a sendmail PING
sendmail_udp_signal=127.0.0.1:4005

# IP and port of the computer that runs the pagelist backend server
# To stop the pagelist backend: snapsignal -a pagelist STOP
# To ping the pagelist backend: snapsignal -a pagelist PING
pagelist_udp_signal=127.0.0.1:4006

# IP and pot of the computer that runs the images backend server
# To stop the images backend            : snapsignal -a images STOP
# To ping the images backend            : snapsignal -a images PING
images_udp_signal=127.0.0.1:4008

# IP and port of the computer that runs the pagelist backend server
# To stop the pagelist backend          : snapsignal -a snapserver STOP
# To flush the log and reopen the output: snapsignal -a snapserver NLOG
snapserver_udp_signal=127.0.0.1:4007

# vim: wrap
