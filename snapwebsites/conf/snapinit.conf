# Sample of Snap! Server configuration file
# This file is actually used while working on development
#
# The file is a basic list of variable name = value
# Comments start with a # character, must be the first character after spaces
# Empty lines are ignored

# Log configuration file
log_config=/etc/snapwebsites/snapinit.properties

# Host & Port to connect to Cassandra
cassandra_host=127.0.0.1
cassandra_port=9160

# Use one of:
#   simple -- use a simple strategy for the context (change before creation!)
#             select this ONLY if you can be sure you will never use more
#             than one data center
#   local -- spread the data between various racks, but the same data center
#   network -- use a rack and data center aware strategy, slower, but much
#              more versatile
#cassandra_strategy=simple
# The replication factor defines how many copies of your data is kept total
# In most cases you want a minimum of 3. If you have 2 or even just 1 node
# (i.e. in a development environment) then change this value (change before
# creation of the snap_websites context); this parameter is used for all
# strategies, although in case of a network setup, it will make that many
# copies total on all data centers
#cassandra_replication=1
# The replication factor needs to be defined on a per data center basis
# when you use the 'local' or 'network' strategies. In that case we need
# the list of data center names (DC1,DC2...) This parameter is a comma
# separated list of data centers; WARNING: if you put an invalid name here,
# then Cassandra will give you "UnavailableException" errors!
#cassandra_data_centers=DC1

# Wait forever for Cassandra to come up, pause for 10 seconds between
# each attempt
#wait_interval=10
#wait_max_tries=-1

## TODO: change the list of services in an XML file so that
##       way we can clearly define all sorts of parameters
##       (i.e. once we have the snapcommunicator we should
##       start using a different configuration file, for
##       example; and we want to define the order to start
##       those processes, dependencies, waiting period and
##       how to wait to start/stop, etc.)
##       Also snapcommunicator will be used to send
##       signals... so how to wait can either use snapcommunicator
##       a process name, a process pid...

# List of services that snapinit will start on reboot
services=server,sendmail,pagelist,images

# Configuration file to pass down to the services
services_config=/etc/snapwebsites/snapserver.conf

# vim: wrap
