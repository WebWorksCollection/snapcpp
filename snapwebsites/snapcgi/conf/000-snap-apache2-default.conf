#
# The following is the default apache2 configuration coming with Snap!
# websites. If you use the bundle-frontend.xml file to install the
# apache2 server along with snap.cgi, then this file will be installed
# to handle all hits to that server.
#

# Regular site (port 80 is HTTP)
<VirtualHost *:80>
  # Name of the server
  ServerName snap.example.com
  # ServerAlias ...

  # We have to have a document root, preferably one that exists
  DocumentRoot /var/www/html/

  # Error and other logs
  ErrorLog /var/log/apache2/snap-default-error.log
  CustomLog /var/log/apache2/snap-default-access.log vhost_combined

  # Directory with snap.cgi -- update if you don't use the default
  #ScriptAlias /cgi-bin/ /usr/lib/cgi-bin/

  # Do not show directory contents
  # (note that we also remove the autoindex module, but in case someone
  # was to re-enable it...)
  <Directory "/var/www/html/">
    Options -Indexes
  </Directory>

  # ... other options ...

  # Uncomment the following to limit access to only one given IP address
  #<Directory "/usr/lib/cgi-bin">
  #  # Apache 2.4
  #  #Require ip x.x.x.x
  #</Directory>

  # For details about the rewrite engine check out the Apache documentation:
  #   http://httpd.apache.org/docs/current/mod/mod_rewrite.html
  RewriteEngine on
  # Don't re-rewrite /cgi-bin requests (Skip next rule)
  # (however, we will fail with a 404 on all of those)
  RewriteRule snap\.cgi - [S=1]
  # Rewrite anything else as a /cgi-bin/snap.cgi request
  RewriteRule ^(.*)$ /cgi-bin/snap.cgi [L,PT,QSA]

  # To send users a 503 while you are doing maintenance, you may use
  # the following. The 180000 is 5 hours. Change appropriately.
  ##MAINTENANCE-START##
  #<Directory "/usr/share/snapwebsites/html/maintenance/">
  #  Options IncludesNoExec
  #  Require all granted
  #</Directory>
  #Alias /error/ "/usr/share/snapwebsites/html/maintenance/"
  #RedirectMatch 503 ^/(?!error).*
  #ErrorDocument 503 /error/maintenance.html
  #Header always set Retry-After "18000"
  ##MAINTENANCE-END##

  # The person in charge of this website
  ServerAdmin webmaster@example.com
</VirtualHost>

# If you instead want to force all users to access HTTPS instead of HTTP
# you may use a redirect
#<VirtualHost *:80>
#  ServerName snap.example.com
#  DocumentRoot /var/www/html/
#  ServerAdmin webmaster@example.com
#  ErrorLog /var/log/apache2/snap-default-error.log
#  CustomLog /var/log/apache2/snap-default-access.log vhost_combined
#  RedirectMatch permanent ^(.*)$ https://snap.example.com:443$1
#</VirtualHost>


# Secure site (port 443 is HTTPS)
#<VirtualHost *:443>
#  # Name of the server
#  ServerName snap.example.com
#  # ServerAlias ...
#
#  # We have to have a document root, preferably one that exists
#  DocumentRoot /var/www/html/
#
#  # Error and other logs
#  ErrorLog /var/log/apache2/snap-default-error.log
#  CustomLog /var/log/apache2/snap-default-access.log vhost_combined_ssl
#
#  # Directory with snap.cgi -- update if you don't use the default
#  #ScriptAlias /cgi-bin/ /usr/lib/cgi-bin/
#
#  # Do not show directory contents
#  # (note that we also remove the autoindex module, but in case someone
#  # was to re-enable it...)
#  <Directory "/var/www/html/">
#    Options -Indexes
#  </Directory>
#
#  # ... other options ...
#
#  # For details about the rewrite engine check out the Apache documentation:
#  #   http://httpd.apache.org/docs/current/mod/mod_rewrite.html
#  RewriteEngine on
#
#  # Remove the "w[w[w[w]]]" if present by redirecting clients
#  # (Note: this is not very useful for a multi-site installation)
#  #RewriteCond %{HTTP_HOST} ^(w.example.com|ww.example.com|www.example.com|wwww.example.com)$
#  #RewriteRule ^/(.*) https://snap.example.com/$1 [R=permanent,L]
#
#  # Don't re-rewrite /cgi-bin requests (Skip next rule)
#  # (however, we will fail with a 404 on all of those)
#  RewriteRule snap\.cgi - [S=1]
#  # Rewrite anything else as a /cgi-bin/snap.cgi request
#  RewriteRule ^(.*)$ /cgi-bin/snap.cgi [L,PT,QSA]
#
#  # To send users a 503 while you are doing maintenance, you may use
#  # the following. The 180000 is 5 hours. Change appropriately.
#  #RedirectMatch 503 ^/(?!holding\.html)
#  #ErrorDocument 503 /holding.html
#  #Header always set Retry-After "18000"
#
#  # The person in charge of this website
#  ServerAdmin webmaster@example.com
#
#  # Actual SSL options
#  #
#
#  # The CRT is the signed certificate
#  #
#  SSLCertificateFile /etc/apache2/ssl-snap/cert-01/example.com.crt
#
#  # The key is the private key you generated
#  #
#  SSLCertificateKeyFile /etc/apache2/ssl-snap/cert-01/example.com.key
#
#  # Some systems may come with a CRT chain, in which case you include
#  # it this way (i.e. godaddy offers certificates with such)
#  #
#  SSLCertificateChainFile /etc/apache2/ssl-snap/cert-01/bundle.crt
#
#  # Now we can include our SSL options, that includes turning ON
#  # the SSL engine
#  #
#  Include /etc/apache2/ssl-snap/snap-apache2-ssl.conf
#</VirtualHost>

# vim: syntax=apache
