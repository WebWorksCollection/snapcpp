# Fail2Ban jail configuration files
#
# These jails come in addition the default jails offered by fail2ban.
#


# The fact that a computer attempts to connect to use via port 23 is a
# very clear signal that we do not want that IP to ever access us in
# any other way either.
#
# IMPORTANT NOTE:
# Uncomment if you want to use this one. Because of the IoT incredible
# extend, at this point we turn it off and just block the ports (23, 123
# and 2323) directly in the firewall before it gets sent to the
# iptables.log file.
#
#[snap-telnet]
#enabled  = true
#filter   = snap-telnet-filter
#action   = snap-firewall-action[scheme=all,period=forever,reason=fail2ban: telnet]
#logpath  = /var/log/iptables.log
#maxretry = 1
#findtime = 86400

# The snap-iptables scans the /var/log/iptables.log which is a set of
# kernel log as coming from LOG rules in the iptables firewall.
#
# If the same IP address tried to access our services for 5 times or
# more and got blocked within the last 1h, block the IP for a year.
#
[snap-iptables]
enabled  = true
filter   = snap-iptables-filter
action   = snap-firewall-action[scheme=all,period=year,reason=fail2ban: iptables]
logpath  = /var/log/iptables.log
maxretry = 5
findtime = 3600

# Apache replied with a 400, we just ban those immediately
# (browsers never generate such, really!)
#
[snap-apache-badrequest]
enabled  = true
filter   = snap-apache-badrequest-filter
action   = snap-firewall-action[scheme=all,period=year,reason=fail2ban: apache bad request]
logpath  = %(apache_access_log)s
maxretry = 1
findtime = 86400

# By default Apache2 server refuses proxying, but it will save such requests
# in its log files. We detect those and block any such IP address because it
# is never possible, with Snap, to proxy an HTTP request in this way.
#
[snap-apache-proxy]
enabled  = true
filter   = snap-apache-proxy-filter
action   = snap-firewall-action[scheme=all,period=year,reason=fail2ban: apache proxy]
logpath  = %(apache_access_log)s
maxretry = 1
findtime = 86400

# If a user gets too many timeouts (35) then block him. Untfortunately we
# cannot make that count too small because this happens if legitimate users
# who would lose their Internet connection and as a result you can end up
# with many 408.
#
[snap-apache-timeout]
enabled  = true
filter   = snap-apache-timeout-filter
action   = snap-firewall-action[scheme=all,period=year,reason=fail2ban: apache timeout]
logpath  = %(apache_access_log)s
# This can happen to regular users if they lose their Internet connection
# and they could have quite a few connections (especially with Chrome)
maxretry = 35
findtime = 3600

# Block various paths which are blocked by snap.cgi, but that does not work
# when accessing the website adnd Apache2 decides to emit a 301.
#
[snap-apache-unwanted]
enabled  = true
filter   = snap-apache-unwanted-filter
action   = snap-firewall-action[scheme=all,period=year,reason=fail2ban: apache unwanted]
logpath  = %(apache_access_log)s
maxretry = 1
findtime = 86400

# vim: syntax=dosini
