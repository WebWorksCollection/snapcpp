<?xml version="1.0"?>
<!--
  see /usr/share/snapwebsites/xsd/bundles.xsd for details
  to verify your changes (change the == with two dashes):
    xmllint ==noout ==schema /usr/share/snapwebsites/xsd/bundles.xsd /etc/snapwebsites/services.d/bundle-tools.xml
-->
<bundle>
  <name>snaplog</name>
  <description>
    <p>This bundle installs the 'snaplog' package, which includes a MySQL database.</p>
  </description>
  <packages>mysql-server,snaplog</packages>
  <preinst>
    if ! dpkg -l pwgen 2> /dev/null
    then
      apt install pwgen
    fi

    # First, create the passwords we will use, but in memory only.
    #
    ROOT_PASSWORD=`pwgen -cns 20`

    # Next, create a private dir that is read/writable only by root,
    # and squirrel these passwords away
    #
    PRIVATE_DIR=/var/lib/snapwebsites/private
    mkdir -p ${PRIVATE_DIR}
    chown root.root ${PRIVATE_DIR}
    chmod 0700 ${PRIVATE_DIR}
    #
    echo "ROOT_PASSWORD=${ROOT_PASSWORD}" &gt; ${PRIVATE_DIR}/snaplog_password.sh

    # Lastly, set the root password in debconf, so it won't ask for it when
    # creating the database first time
    #
    debconf-set-selections &lt;&lt;&lt; \
      "mysql-server mysql-server/root_password password ${ROOT_PASSWORD}"
    debconf-set-selections &lt;&lt;&lt; \
      "mysql-server mysql-server/root_password_again password ${ROOT_PASSWORD}"
  </preinst>
  <postinst>
    PRIVATE_DIR=/var/lib/snapwebsites/private
    source ${PRIVATE_DIR}/snaplog_password.sh
    mysql --user=root --password="${ROOT_PASSWORD}" &lt;&lt;EOF
CREATE USER 'snaplog'@'localhost' IDENTIFIED BY 'snaplog';
GRANT ALL PRIVILEGES ON snaplog.* TO 'snaplog'@'localhost';
FLUSH PRIVILEGES;
CREATE DATABASE snaplog;
CREATE TABLE snaplog.log
  ( id INT NOT NULL PRIMARY KEY AUTO_INCREMENT
  , timestamp   DATETIME DEFAULT CURRENT_TIMESTAMP
  , server      VARCHAR(25)
  , service     VARCHAR(25)
  , level       VARCHAR(10)
  , msgid       VARCHAR(20)
  , ipaddr      VARCHAR(15)
  , file        VARCHAR(120)
  , line        INT
  , func        VARCHAR(100)
  , message     LONGTEXT
  );
EOF
  </postinst>
  <postrm>
    apt purge -y "mysql-server-*"
    rm -rf /var/lib/mysql
    PRIVATE_DIR=/var/lib/snapwebsites/private
    rm ${PRIVATE_DIR}/snaplog_password.sh
  </postrm>
</bundle>
<!--
  vim: ts=2 sw=2 et
-->
