<?xml version="1.0"?>
<!--
Snap Websites Server == passord policy settings page widgets
Copyright (C) 2014-2015  Made to Order Software Corp.

This program is free software; you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation; either version 2 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program; if not, write to the Free Software
Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA  02110-1301  USA
-->
<editor-form owner="password" content-modified="2015-12-22 11:28:10">
  <auto-reset minutes="30"/> <!-- 30 minutes -->
  <mode action="edit"/>
  <immediate/>
  <focus refid="minimum_lowercase_letters"/>
  <on-save allow-edit="yes"/>
  <taborder>
    <tabindex refid="minimum_lowercase_letters"/>
    <tabindex refid="minimum_uppercase_letters"/>
    <tabindex refid="minimum_letters"/>
    <tabindex refid="minimum_digits"/>
    <tabindex refid="minimum_spaces"/>
    <tabindex refid="minimum_specials"/>
    <tabindex refid="minimum_unicode"/>
    <tabindex refid="check_blacklist"/>
  </taborder>
  <widget id="editor-session" type="hidden" field="editor::session" path="editor/session">
  </widget>

  <!-- minimum counts -->
  <widget id="minimum_lowercase_letters" type="line-edit" field="password::minimum_lowercase_letters" path="password/minimum_lowercase_letters" no-toolbar="no-toolbar" auto-save="int64">
    <tooltip>Minimum number of lowercase letters.</tooltip>
    <help>Help</help>
    <value>0</value>
  </widget>
  <widget id="minimum_uppercase_letters" type="line-edit" field="password::minimum_uppercase_letters" path="password/minimum_uppercase_letters" no-toolbar="no-toolbar" auto-save="int64">
    <tooltip>Minimum number of uppercase letters.</tooltip>
    <help>Help</help>
    <value>0</value>
  </widget>
  <widget id="minimum_letters" type="line-edit" field="password::minimum_letters" path="password/minimum_letters" no-toolbar="no-toolbar" auto-save="int64">
    <tooltip>Minimum number of letters of any type.</tooltip>
    <help>Help</help>
    <value>0</value>
  </widget>
  <widget id="minimum_digits" type="line-edit" field="password::minimum_digits" path="password/minimum_digits" no-toolbar="no-toolbar" auto-save="int64">
    <tooltip>Minimum number of digits.</tooltip>
    <help>Help</help>
    <value>0</value>
  </widget>
  <widget id="minimum_spaces" type="line-edit" field="password::minimum_spaces" path="password/minimum_spaces" no-toolbar="no-toolbar" auto-save="int64">
    <tooltip>Minimum number of spaces.</tooltip>
    <help>Help</help>
    <value>0</value>
  </widget>
  <widget id="minimum_specials" type="line-edit" field="password::minimum_specials" path="password/minimum_specials" no-toolbar="no-toolbar" auto-save="int64">
    <tooltip>Minimum number of spaces.</tooltip>
    <help>Help</help>
    <value>0</value>
  </widget>
  <widget id="minimum_unicode" type="line-edit" field="password::minimum_unicode" path="password/minimum_unicode" no-toolbar="no-toolbar" auto-save="int64">
    <tooltip>Minimum number of spaces.</tooltip>
    <help>Help</help>
    <value>0</value>
  </widget>
  <widget id="minimum_variation" type="line-edit" field="password::minimum_variation" path="password/minimum_variation" no-toolbar="no-toolbar" auto-save="int64">
    <tooltip>
      Minimum variation means the total number of different types of
      characters, without actually having to force the user to use
      a specific type of character.
    </tooltip>
    <help>
      In most cases, administrators force users to make use of specific
      sets of characters. Using the minimum variation entry, you can
      instead force users to use a certain number of variations, but you
      do not force them to use any specific set of characters.
    </help>
    <value>0</value>
  </widget>
  <widget id="minimum_length_of_variations" type="line-edit" field="password::minimum_length_of_variations" path="password/minimum_length_of_variations" no-toolbar="no-toolbar" auto-save="int64">
    <tooltip>
      When requesting a minimum set of variations, you can force the user
      to enter at least this many characters in each category of characters.
      The result is generally similar to asking a user to enter 2 or 3
      characters in each categories.
    </tooltip>
    <help>
      This number represents the minimum number of characters required
      in each category for the password to be accepted with having
      the minimum number of categories specified. In most cases, you
      leave this value set to 1 or change it to just 2. This value
      is completely ignored if the minimum variation is set to 0.
    </help>
    <value>1</value>
  </widget>
  <widget id="delay_between_password_changes" type="line-edit" field="password::delay_between_password_changes" path="password/delay_between_password_changes" no-toolbar="no-toolbar" auto-save="int64">
    <tooltip>
      By adding a delay, in minutes, you can prevent the user from changing
      his password over and over again. This is generally not useful unless
      you want to better enforce regular password changes.
    </tooltip>
    <help>
      Although not recommanded, this option allows you to limit the number
      of times a user can change his password in a given amount of time.
      Note that to prevent users from using their old passwords, there
      is not need to use a delay. We do not just count but we also have
      a timeout for old passwords and any number of them may be kept
      around. So if an old password is marked to remain in the database
      for one year, the user cannot reuse it for one year even by changing
      the his password hundred of times every day. If you want to use this
      option, make sure to keep the number of minutes to a really small
      number.
    </help>
    <value>0</value>
  </widget>

  <!-- check blacklist -->
  <widget id="check_blacklist" type="checkmark" field="password::check_blacklist" path="password/check_blacklist" auto-save="int8">
    <label>Refuse passwords that are blacklisted</label>
    <tooltip>When this checkmark is selected, the password plugin prevents the use of passwords that are defined in the Password Blacklist.</tooltip>
    <help>Help</help>
    <value>0</value>
  </widget>
  <widget id="check_username" type="edit-line" field="password::check_username" path="password/check_username" auto-save="int64">
    <tooltip>
      A password that matches a username is not considered a password at all.
      Our test actually checks for slight variations using a Levenshtein
      comparator so "alexis" and "alexsi" are both forbidden if your username
      is "alexis". Use 0 to turn off this feature.
    </tooltip>
    <help>
      This test ensures that the password does not in any way match the
      username. By default this includes slight variations such as
      swapping two letters. This is done with the use of a Levenshtein
      distance comparator. It is considered really bad practice to use
      the same token as your username and password, hence this feature.
      Note that by default this feature is turned on. The number you enter
      here should remain very small. We use 2 by default, you may increase
      it up to 4 or 5, more will generally cause a lot of hardship in
      coming up with a password that works for people.
    </help>
    <value>2</value>
  </widget>
  <widget id="check_username_reversed" type="checkmark" field="password::check_username_reversed" path="password/check_username_reversed" auto-save="int8">
    <label>Also check whether the username matches the password when checked in reversed order.</label>
    <tooltip>
      When this checkbox is selected, the Username test is done with
      the user name as is and in reverse order (i.e. "alexis" and
      "sixela".) This prevents someone from just using their username
      reversed as their password.
    </tooltip>
    <help>
      This checkmark requires that the username test be done with
      the username reversed. Some people use such since it is
      easy to remember your password that way. This feature is
      turned on by default because it is something really easy for
      hackers to check to gain access to a user account.
    </help>
    <value>1</value>
  </widget>

  <!-- password forced renewal -->
  <widget id="limit_duration" type="checkmark" field="password::limit_duration" path="password/limit_duration" auto-save="int8">
    <label>Limit the amount of time a password can be used before it has to be changed</label>
    <tooltip>When this checkmark is selected, users are forced to change their password once in a while. The duration is specified in the maximum duration widget.</tooltip>
    <help>Help</help>
    <value>0</value>
  </widget>
  <widget id="maximum_duration" type="line-edit" field="password::maximum_duration" path="password/maximum_duration" no-toolbar="no-toolbar" auto-save="int64">
    <tooltip>Number of Days Before Password Has to be Changed</tooltip>
    <help>
      This number represents the number of days the password remains
      valid. After that amount of time, the password is considered
      out of date and the user is forced to change it. Note that if
      the Limit Duration checkmark is not checked, then this feature
      is turned off so the number of days is ignored.
    </help>
    <value>92</value>
  </widget>

  <!-- old password reuse -->
  <widget id="prevent_old_passwords" type="checkmark" field="password::prevent_old_passwords" path="password/prevent_old_passwords" auto-save="int8">
    <label>Prevent user from entering an old password when changing passwords</label>
    <tooltip>Turn on this flag if you wantyour users to have to enter a new password each time they change their password.</tooltip>
    <help>Help</help>
    <value>0</value>
  </widget>
  <widget id="minimum_old_passwords" type="line-edit" field="password::minimum_old_passwords" path="password/minimum_old_passwords" no-toolbar="no-toolbar" auto-save="int64">
    <tooltip>Enter the minimum number of old passwords to keep in the database before they get deleted.</tooltip>
    <help>
      This number represents the minimum number of passwords that are
      kept in the database until they get deleted. Even password that
      are very old do not get deleted if the minimum count is not yet
      reached.
    </help>
    <value>1</value>
  </widget>
  <widget id="old_passwords_maximum_age" type="line-edit" field="password::old_passwords_maximum_age" path="password/old_passwords_maximum_age" no-toolbar="no-toolbar" auto-save="int64">
    <tooltip>The age, in days, that a password has to be before it gets deleted.</tooltip>
    <help>
      This number represents the number of days old passwords are
      kept in the database. Passwords that are older, assuming there
      are more than the minimum number of password expected in the
      database, get deleted from the database. The default is 365
      which represents one whole year. So after a year or so, users
      can reuse their (really) old passwords.
    </help>
    <value>365</value>
  </widget>

</editor-form>
<!-- vim: ts=2 sw=2 et
-->
